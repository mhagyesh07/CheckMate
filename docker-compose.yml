version: '3.8'

services:
  # Chess Game Backend
  chess-backend:
    build: 
      context: .
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - PORT=3000
      - MONGODB_URI=${MONGODB_URI}
      - JWT_SECRET=${JWT_SECRET}
      - JWT_REFRESH_SECRET=${JWT_REFRESH_SECRET}
      - JWT_EXPIRES_IN=24h
      - JWT_REFRESH_EXPIRES_IN=7d
      - CORS_ORIGIN=http://localhost:3001
      - LOG_LEVEL=info
    volumes:
      - ./logs:/app/logs
      - .:/app
      - /app/node_modules
      - /app/client/node_modules
    restart: unless-stopped
    networks:
      - chess-network
    healthcheck:
      test: ["CMD", "node", "healthcheck.js"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Optional: MongoDB for local development
  # Uncomment if you want local MongoDB instead of Atlas
  # mongodb:
  #   image: mongo:7
  #   ports:
  #     - "27017:27017"
  #   environment:
  #     MONGO_INITDB_ROOT_USERNAME: admin
  #     MONGO_INITDB_ROOT_PASSWORD: password
  #     MONGO_INITDB_DATABASE: chess_game
  #   volumes:
  #     - mongodb_data:/data/db
  #   networks:
  #     - chess-network

  # Optional: Nginx for production-like setup
  # nginx:
  #   image: nginx:alpine
  #   ports:
  #     - "80:80"
  #   volumes:
  #     - ./nginx.conf:/etc/nginx/nginx.conf
  #   depends_on:
  #     - chess-backend
  #   networks:
  #     - chess-network

volumes:
  # mongodb_data:

networks:
  chess-network:
    driver: bridge